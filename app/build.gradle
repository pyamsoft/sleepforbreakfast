/*
 * Copyright 2021 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "com.android.application"

//noinspection GroovyMissingReturnStatement
android {
  namespace "com.pyamsoft.sleepforbreakfast"

  compileSdkVersion rootProject.ext.compileSdk

  defaultConfig {
    applicationId "com.pyamsoft.sleepforbreakfast"
    minSdkVersion rootProject.ext.minSdk
    targetSdkVersion rootProject.ext.targetSdk
    versionCode 1
    versionName "20230313-1"

    // For vector drawables
    vectorDrawables.useSupportLibrary = true

    resConfigs "en"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11

    // Flag to enable support for the new language APIs
    coreLibraryDesugaringEnabled true
  }

  kotlinOptions {
    jvmTarget = "11"
  }

  signingConfigs {
    debug {
      storeFile file("debug.keystore")
      keyAlias "androiddebugkey"
      keyPassword "android"
      storePassword "android"
    }
    release {
      storeFile new File(BUNDLE_STORE_FILE)
      keyAlias BUNDLE_KEY_ALIAS
      keyPassword BUNDLE_KEY_PASSWD
      storePassword BUNDLE_STORE_PASSWD
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"),
          "proguard-rules.pro"
    }

    debug {
      signingConfig signingConfigs.debug
      applicationIdSuffix ".dev"
      versionNameSuffix "-dev"
    }
  }

  buildFeatures {
    compose true
  }

  composeOptions {
    kotlinCompilerExtensionVersion "$compose_compiler_version"
  }

  // Fixes this error message
  // More than one file was found with OS independent path 'META-INF/core_release.kotlin_module'
  packagingOptions {
    pickFirst 'META-INF/core_release.kotlin_module'
    pickFirst 'META-INF/ui_release.kotlin_module'
    pickFirst 'META-INF/INDEX.LIST'
  }
}

// Leave at bottom
// apply plugin: 'com.google.gms.google-services'
dependencies {
  kapt "com.google.dagger:dagger-compiler:$dagger"

  // Leak Canary
  debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
  implementation "com.squareup.leakcanary:plumber-android:$leakCanary"

  // Autopsy
  debugImplementation "com.github.pyamsoft.pydroid:autopsy:$pydroid"

  // AndroidX
  api "androidx.fragment:fragment-ktx:$fragment"
  api "androidx.appcompat:appcompat:$appCompat"

  implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist"

  implementation project(':core')
  implementation project(':db')
  implementation project(':db-room')
  implementation project(':home')
  implementation project(':main')
  implementation project(':spending')
  implementation project(':transactions')
  implementation project(':ui')
  implementation project(':worker')
  implementation project(':worker-workmanager')
}
